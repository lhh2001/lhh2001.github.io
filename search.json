[{"title":"Hexo + GitHub Pages 部署个人博客记录","path":"/2025/07/04/Hexo-GitHub-Pages-部署个人博客记录/","content":"各种细节网络上各种资料已经非常详细，主要记录一下遇到的问题，顺便熟悉下发 blog 的流程。 配置Hexo需要先配置一下nodejs的环境，按照Hexo的文档 | Hexo中步骤安装即可，没遇到什么太大的问题。 配置GitHub Pages按照创建 GitHub Pages 站点 - GitHub Docs中的步骤配置即可。 需要注意： 仓库名有严格的要求，即user.github.io，user 为用户名； 如果是个人用户，仓库可见性需要为Public，否则无法正常使用。 部署环境参考一键部署 | Hexo，进行简单的配置后，就可以一键部署发布了，几分钟就可以看到变更。 插入图片使用hexo-asset-img插件辅助。参照README中的步骤，如果Hexo的版本大于7，要安装1.2.0版本的插件： npm install hexo-asset-img@1.2.0 --save 这个插件网络上使用教程比较多，不过建议直接参照github仓库主页下的README操作。 评论区我采用的方案是Stellar主题 + giscus，不同主题的配置方法可能会有一些区别。官方文档上没有给出详细的步骤，这里展开说一下： 安装并使用Stellar主题Stellar：开始您全新的博客之旅 - XAOXUU 参照GitHub Discussions 快速入门 - GitHub Enterprise Cloud Docs中的步骤，开启某个仓库（可以是github.io对应的仓库）的 Discussion 功能，随后开启一个名为 Announcements 的讨论： 在giscus上进行相关配置，仓库名称按照[github用户名]/[仓库名]填写，映射关系选择URL，Discussion 分类填写 Announcements。 滑到下方，会生成一个script标签。因为使用了主题，我们不需要直接使用这个标签，只需要复制其中的信息然后进行配置即可，下一步会介绍配置的方法。 在Hexo的_config.yml文件同级目录创建文件_config.stellar.yml，然后填入下面的配置： comments: service: giscus # giscus # https://giscus.app/zh-CN giscus: src: https://giscus.app/client.js data-repo: xxx/xxx # [在此输入仓库] data-repo-id: # [在此输入仓库 ID] data-category: # [在此输入分类名] data-category-id: data-mapping: pathname data-strict: 0 data-reactions-enabled: 1 data-emit-metadata: 0 data-input-position: top # top, bottom data-theme: preferred_color_scheme data-lang: zh-CN data-loading: lazy crossorigin: anonymous 将data-repo data-repo-id data-category data-category-id几个属性根据script标签中的信息填写即可。注意这些配置写在_config.yml中是无效的，一定得放在_config.stellar.yml里面。","tags":["杂项"],"categories":["杂项"]}]